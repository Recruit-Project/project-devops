pipeline {
    agent any

    tools {
        gradle 'gradle-8.3'
        jdk 'jdk-17'
    }

    environment {

        DOCKERHUB_USERNAME = 'agida0413'
        RELEASE_GITHUB_URL = 'https://github.com/Recruit-Project/project-devops.git'
        APP_GITHUB_URL = 'https://github.com/Recruit-Project/project-member.git'

    }

    stages {
        stage('소스파일 체크아웃') {
            steps {
                git branch: 'develop', url: "${APP_GITHUB_URL}"
            }
        }

        stage('소스 빌드') {
            steps {

                sh "chmod +x ./gradlew"
                sh "gradle clean build -x test"
            }
        }

        stage('릴리즈파일 체크아웃') {
            steps {
                 checkout([$class: 'GitSCM',
                           branches: [[name: 'main']],
                           userRemoteConfigs: [[url: "${RELEASE_GITHUB_URL}"]]
                 ])
            }
        }

        stage('컨테이너 빌드') {
            steps {
                sh 'mkdir -p ./build/docker'
                sh "cp ./build/libs/project-member-dev-0.0.1-SNAPSHOT.jar ./build/docker/project-member-dev-0.0.1-SNAPSHOT.jar"

                withCredentials([usernamePassword(credentialsId: 'docker_password', passwordVariable: 'PASSWORD', usernameVariable: 'USERNAME')]) {
                    sh '''
                        echo "$PASSWORD" | docker login -u "$USERNAME" --password-stdin
                    '''
                }

                sh "docker build -t ${DOCKERHUB_USERNAME}/backend-member:latest ."
            }
        }

        stage('컨테이너 업로드') {
            steps {
                sh "docker push ${DOCKERHUB_USERNAME}/backend-member:latest"
            }
        }

        stage('쿠버네티스 배포') {
            steps {
                withCredentials([file(credentialsId: 'k8s_master_config', variable: 'KUBECONFIG')]) {
                    sh "helm upgrade --install backend-member ./helm --values ./helm/values-dev.yaml --namespace backend-app"
                }
            }
        }
    }
}
